Return-Path: <owner-linux-mm@kvack.org>
Received: from mail-pa0-f70.google.com (mail-pa0-f70.google.com [209.85.220.70])
	by kanga.kvack.org (Postfix) with ESMTP id A6AB56B0253
	for <linux-mm@kvack.org>; Mon, 14 Nov 2016 18:59:38 -0500 (EST)
Received: by mail-pa0-f70.google.com with SMTP id hc3so101639624pac.4
        for <linux-mm@kvack.org>; Mon, 14 Nov 2016 15:59:38 -0800 (PST)
Received: from mga11.intel.com (mga11.intel.com. [192.55.52.93])
        by mx.google.com with ESMTPS id a128si21780803pfa.23.2016.11.14.15.59.37
        for <linux-mm@kvack.org>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 14 Nov 2016 15:59:37 -0800 (PST)
Date: Tue, 15 Nov 2016 07:58:55 +0800
From: kbuild test robot <fengguang.wu@intel.com>
Subject: [PATCH] vfs: fix boolreturn.cocci warnings
Message-ID: <20161114235851.GA29411@intel17.lkp.intel.com>
References: <201611150731.dUsDxUoh%fengguang.wu@intel.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <201611150731.dUsDxUoh%fengguang.wu@intel.com>
Sender: owner-linux-mm@kvack.org
List-ID: <linux-mm.kvack.org>
To: Ian Kent <ikent@redhat.com>
Cc: kbuild-all@01.org, Andrew Morton <akpm@linux-foundation.org>, Linux Memory Management List <linux-mm@kvack.org>, Alexander Viro <viro@zeniv.linux.org.uk>, linux-fsdevel@vger.kernel.org, linux-kernel@vger.kernel.org

fs/namespace.c:1185:9-10: WARNING: return of 0/1 in function 'path_is_mountpoint' with return type bool
fs/namespace.c:1199:9-10: WARNING: return of 0/1 in function 'path_is_mountpoint_rcu' with return type bool

 Return statements in functions returning bool should use
 true/false instead of 1/0.
Generated by: scripts/coccinelle/misc/boolreturn.cocci

CC: Ian Kent <ikent@redhat.com>
Signed-off-by: Fengguang Wu <fengguang.wu@intel.com>
---

 namespace.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -1182,7 +1182,7 @@ bool path_is_mountpoint(struct path *pat
 	bool res;
 
 	if (!d_mountpoint(path->dentry))
-		return 0;
+		return false;
 
 	rcu_read_lock();
 	res = __path_is_mountpoint(path);
@@ -1196,7 +1196,7 @@ EXPORT_SYMBOL(path_is_mountpoint);
 bool path_is_mountpoint_rcu(struct path *path)
 {
 	if (!d_mountpoint(path->dentry))
-		return 0;
+		return false;
 
 	return __path_is_mountpoint(path);
 }

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>
