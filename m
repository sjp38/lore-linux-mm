Return-Path: <owner-linux-mm@kvack.org>
Received: from mail-ua0-f200.google.com (mail-ua0-f200.google.com [209.85.217.200])
	by kanga.kvack.org (Postfix) with ESMTP id B06A76B0388
	for <linux-mm@kvack.org>; Mon, 13 Mar 2017 06:38:03 -0400 (EDT)
Received: by mail-ua0-f200.google.com with SMTP id 62so121123150uas.1
        for <linux-mm@kvack.org>; Mon, 13 Mar 2017 03:38:03 -0700 (PDT)
Received: from mail-ua0-x22f.google.com (mail-ua0-x22f.google.com. [2607:f8b0:400c:c08::22f])
        by mx.google.com with ESMTPS id m7si17442uab.119.2017.03.13.03.38.02
        for <linux-mm@kvack.org>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Mon, 13 Mar 2017 03:38:02 -0700 (PDT)
Received: by mail-ua0-x22f.google.com with SMTP id q7so133503589uaf.2
        for <linux-mm@kvack.org>; Mon, 13 Mar 2017 03:38:02 -0700 (PDT)
MIME-Version: 1.0
In-Reply-To: <cac135d2-7ed4-c066-6316-22be9f7d16a3@virtuozzo.com>
References: <CACT4Y+ZVWUYda9zr74QOmcXzd0S7P714LhzrVu7wRO0oDM0P2w@mail.gmail.com>
 <d849e961-7120-2ba5-1d58-df81d0ae3293@virtuozzo.com> <CACT4Y+Y=Pz6wFN66BGdPkTPJWrnbxCL2GX-R0q5_jr5kwjF+zA@mail.gmail.com>
 <CACT4Y+bD0S9CY0ahvZ=pOpXqHAkH6P0OTHPTeBi-Pb2Nw6ph4w@mail.gmail.com> <cac135d2-7ed4-c066-6316-22be9f7d16a3@virtuozzo.com>
From: Dmitry Vyukov <dvyukov@google.com>
Date: Mon, 13 Mar 2017 11:37:41 +0100
Message-ID: <CACT4Y+b7f5Q7c912b2Y0ohuKMDFp9p7QEhH-3HnwqPtunuzcRw@mail.gmail.com>
Subject: Re: strange allocation failures
Content-Type: text/plain; charset=UTF-8
Sender: owner-linux-mm@kvack.org
List-ID: <linux-mm.kvack.org>
To: Andrey Ryabinin <aryabinin@virtuozzo.com>
Cc: "Kirill A. Shutemov" <kirill.shutemov@linux.intel.com>, kasan-dev <kasan-dev@googlegroups.com>, "linux-mm@kvack.org" <linux-mm@kvack.org>, Michal Hocko <mhocko@kernel.org>

On Mon, Mar 13, 2017 at 11:31 AM, Andrey Ryabinin
<aryabinin@virtuozzo.com> wrote:
>
>
> On 03/13/2017 01:10 PM, Dmitry Vyukov wrote:
>> On Mon, Mar 13, 2017 at 11:08 AM, Dmitry Vyukov <dvyukov@google.com> wrote:
>>> On Mon, Mar 13, 2017 at 11:04 AM, Andrey Ryabinin
>>> <aryabinin@virtuozzo.com> wrote:
>>>>
>>>>
>>>> On 03/13/2017 12:50 PM, Dmitry Vyukov wrote:
>>>>> Hello Andrey, Kirill,
>>>>>
>>>>> Can you please help me understand where is all my memory?
>>>>> I am running very moderate workload on a machine with 7.5GB of memory
>>>>> with KASAN. And I see constant vmalloc allocation failures for very
>>>>> moderate sizes. I am confused why it happens and where is all my
>>>>> memory...
>>>>>
>>>>
>>>>
>>>> Perhaps it's SIGKILL generated by syzkaller?
>>>>
>>>> static void *__vmalloc_area_node()
>>>> {
>>>> .....
>>>>                 if (fatal_signal_pending(current)) {
>>>>                         area->nr_pages = i;
>>>>                         goto fail;
>>>>                 }
>>>
>>>
>>> Ah, that would make sense. Syzkaller can indeed kill processes frequently.
>>>
>>> Perhaps we should not print the lengthy allocation failure message
>>> with all the details in such. Not sure how easy it is to filter out
>>> such cases.
>>> I have constant stream of these messages that just make everything
>>> else lost between them. And they are quite confusing. I've starred at
>>> the numbers trying to understand why I am short on memory.
>>
>>
>> Seems trivial. What do you think of:
>>
>
> Makes sense. ACK.
>
>> diff --git a/mm/vmalloc.c b/mm/vmalloc.c
>> index 0dd80222b20b..0b057628a7ba 100644
>> --- a/mm/vmalloc.c
>> +++ b/mm/vmalloc.c
>> @@ -1683,7 +1683,7 @@ static void *__vmalloc_area_node(struct
>> vm_struct *area, gfp_t gfp_mask,
>>
>>                 if (fatal_signal_pending(current)) {
>>                         area->nr_pages = i;
>> -                       goto fail;
>> +                       goto fail_no_warn;
>>                 }
>>
>>                 if (node == NUMA_NO_NODE)
>> @@ -1709,6 +1709,7 @@ static void *__vmalloc_area_node(struct
>> vm_struct *area, gfp_t gfp_mask,
>>         warn_alloc(gfp_mask, NULL,
>>                           "vmalloc: allocation failure, allocated %ld
>> of %ld bytes",
>>                           (area->nr_pages*PAGE_SIZE), area->size);
>> +fail_no_warn:
>>         vfree(area->addr);
>>         return NULL;
>>  }
>>
>>
>> ?


These failing vmalloc's provoked a bunch of bugs in kernel on error
handling paths. And it was useful to see that there was an allocation
failure in the same process right before the bug.
And it was unexpected that I am killing processes that frequently, so
I would like to see at least some information about this on console.
So now I have:


diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 6cbde310abed..418c80a76b4a 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -3073,6 +3073,11 @@ static inline bool should_suppress_show_mem(void)
 #if NODES_SHIFT > 8
        ret = in_interrupt();
 #endif
+       /*
+        * vmalloc() fails when fatal_signal_pending(),
+        * but that's not because we are out of memory.
+        */
+       ret |= fatal_signal_pending(current);
        return ret;
 }

@@ -3120,9 +3125,13 @@ void warn_alloc(gfp_t gfp_mask, nodemask_t
*nodemask, const char *fmt, ...)

        pr_cont(", mode:%#x(%pGg), nodemask=", gfp_mask, &gfp_mask);
        if (nodemask)
-               pr_cont("%*pbl\n", nodemask_pr_args(nodemask));
+               pr_cont("%*pbl", nodemask_pr_args(nodemask));
+       else
+               pr_cont("(null)");
+       if (fatal_signal_pending(current))
+               pr_cont(", fatal signal pending\n");
        else
-               pr_cont("(null)\n");
+               pr_cont("\n");

        cpuset_print_current_mems_allowed();


It's not so verbose, but explains things better.

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>
