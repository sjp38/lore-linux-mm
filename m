Date: Thu, 20 Dec 2007 11:44:45 -0800 (PST)
From: Christoph Lameter <clameter@sgi.com>
Subject: Re: SLUB
In-Reply-To: <476A850A.1080807@hp.com>
Message-ID: <Pine.LNX.4.64.0712201138280.30648@schroedinger.engr.sgi.com>
References: <476A850A.1080807@hp.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-linux-mm@kvack.org
Return-Path: <owner-linux-mm@kvack.org>
To: Mark Seger <Mark.Seger@hp.com>
Cc: linux-mm@kvack.org
List-ID: <linux-mm.kvack.org>

On Thu, 20 Dec 2007, Mark Seger wrote:

> This past summer I released a tool on sourceforge called collectl - see
> http://collectl.sourceforge.net/ which does some pretty nifty system
> monitoring, one component of which is slabs.  I finally got around to trying
> it out on a newer kernel and I picked 2.6.23 and lo and behold, it didn't work
> because /proc/slabinfo has disappeared to be replaced by /sys/slab.  I've been

Yes. The information available about slabs is different now.

> The thing that is especially useful with collectl is that by monitoring slabs
> at the same time as monitoring cpu, processes, disk, network and more, you can
> get a very comprehensive picture of what's going on at any one time.

Good idea.

> My main purpose for writing to this list then becomes what would make the most
> sense to do with slabs with the new slub allocator?  Should I simply report on
> these same fields?  Are there others that make more sense?  Do I need to read
> all 184 entries in /sys/slab and then all the entries under them?  Clearly I
> want to do this efficiently and provide meaningful data at the same time.

You only need to read certain files that you need for the information you 
want to display.

> Perhaps someone would like to take this discussion off-line with me and even
> collaborate with me on enhancements for slub in collectl?

I think we better keep it public (so that it goes into the archive). Here 
a short description of the field in /sys/kernel/slab/<slabcache> that you 
would need

-r--r--r-- 1 root root 4096 Dec 20 11:41 object_size

The size of an object. Subtract slab_size - object_size and you have the 
per object overhead generated by alignements and slab metadata. Does not 
change you only need to read this once.

-r--r--r-- 1 root root 4096 Dec 20 11:41 objects

Number of objects in use. This changes and you may want to monitor it.

-r--r--r-- 1 root root 4096 Dec 20 11:41 slab_size

Total memory used for a single object. Read this only once.

-r--r--r-- 1 root root 4096 Dec 20 11:41 slabs

Number of slab pages in use for this slab cache. May change if slab is 
extended.

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>
