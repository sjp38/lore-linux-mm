Return-Path: <owner-linux-mm@kvack.org>
Received: from mail-yk0-f173.google.com (mail-yk0-f173.google.com [209.85.160.173])
	by kanga.kvack.org (Postfix) with ESMTP id 74C5C6B0069
	for <linux-mm@kvack.org>; Mon,  1 Dec 2014 13:22:23 -0500 (EST)
Received: by mail-yk0-f173.google.com with SMTP id 19so4976368ykq.4
        for <linux-mm@kvack.org>; Mon, 01 Dec 2014 10:22:23 -0800 (PST)
Received: from resqmta-ch2-05v.sys.comcast.net (resqmta-ch2-05v.sys.comcast.net. [2001:558:fe21:29:69:252:207:37])
        by mx.google.com with ESMTPS id b11si15104270qaw.92.2014.12.01.10.22.21
        for <linux-mm@kvack.org>
        (version=TLSv1.2 cipher=RC4-SHA bits=128/128);
        Mon, 01 Dec 2014 10:22:22 -0800 (PST)
Date: Mon, 1 Dec 2014 12:22:20 -0600 (CST)
From: Christoph Lameter <cl@linux.com>
Subject: Re: [Lsf-pc] [LSF/MM ATTEND] Expanding OS noise suppression
In-Reply-To: <547CA12A.6010102@redhat.com>
Message-ID: <alpine.DEB.2.11.1412011215240.2903@gentwo.org>
References: <alpine.DEB.2.11.1411241345250.10694@gentwo.org> <alpine.DEB.2.11.1412011044450.2648@gentwo.org> <547CA12A.6010102@redhat.com>
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-linux-mm@kvack.org
List-ID: <linux-mm.kvack.org>
To: Rik van Riel <riel@redhat.com>
Cc: lsf-pc@lists.linux-foundation.org, linux-mm@kvack.org, "Paul E. McKenney" <paulmck@linux.vnet.ibm.com>, Frederic Weisbecker <fweisbec@gmail.com>

On Mon, 1 Dec 2014, Rik van Riel wrote:

> This is a very interesting topic, but I am not sure the right audience
> for many of these discussions will be at LSF/MM...

Well some of it at least is relevant.

> Besides the minor and major faults, and the THP related defragmentation,
> which of the problems could actually be addressed by the memory
> management subsystem?

One of the motivations for the development of SLUB for example was the
long periods of latency generated by SLAB's object expiration. There are
numerous code segment in the mm subsystem that can cause suprisingly long
latencies for the application. Memory allocations through the page
allocator are on of the most severe examples.

The SLUB allocator's per cpu partial pages introduce some new latencies
(not as bad as SLAB but still) and I have seen that RT people compile that
cpu partial page support out because it causes higher variability.

Some way for the application to know and be able to avoid these would be
great.

> Would you have a list of other items in the memory management subsystem
> that cause latency issues?

I mentioned some above. There are numeous issues arising from various
pieces of heavy operations of the mm subsystems which involve page
migration, writeback, general page table walks, statistics keeping etc
etc.

> Is the minor & major fault thing an actual problem for people with real
> time applications?

Yes. The timeframes for electronic trading are lower than the time it
takes for a fault to be processed. A fault occurring at the wrong time
causes an immediate hit on the bottom line.

> Do you have any ideas on how we could solve the defragmentation and THP
> issue? Even strawman proposals to start a discussion could be useful...

Right now we disable automatic defrag and do a run of defrag and THP
before the start of business manually. There are cores that are dedicated
for the OS where the defrag etc can run during business hours and which
could also do these jobs remotely for the low latency cores if one is
careful and does not create too many latency issues on the remote cores.

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>
