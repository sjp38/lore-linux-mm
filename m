Return-Path: <owner-linux-mm@kvack.org>
Received: from mail-pd0-f173.google.com (mail-pd0-f173.google.com [209.85.192.173])
	by kanga.kvack.org (Postfix) with ESMTP id A24F56B0075
	for <linux-mm@kvack.org>; Fri, 17 Apr 2015 11:02:56 -0400 (EDT)
Received: by pdbqa5 with SMTP id qa5so130632293pdb.1
        for <linux-mm@kvack.org>; Fri, 17 Apr 2015 08:02:56 -0700 (PDT)
Received: from mail.sfc.wide.ad.jp (shonan.sfc.wide.ad.jp. [203.178.142.130])
        by mx.google.com with ESMTPS id kz11si17093949pab.98.2015.04.17.08.02.54
        for <linux-mm@kvack.org>
        (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Fri, 17 Apr 2015 08:02:54 -0700 (PDT)
Date: Sat, 18 Apr 2015 00:02:52 +0900
Message-ID: <m2h9se4x2b.wl@sfc.wide.ad.jp>
From: Hajime Tazaki<tazaki@sfc.wide.ad.jp>
Subject: Re: [RFC PATCH v2 02/11] slab: add private memory allocator header for arch/lib
In-Reply-To: <55310033.1060108@nod.at>
References: <1427202642-1716-1-git-send-email-tazaki@sfc.wide.ad.jp>
	<1429263374-57517-1-git-send-email-tazaki@sfc.wide.ad.jp>
	<1429263374-57517-3-git-send-email-tazaki@sfc.wide.ad.jp>
	<alpine.DEB.2.11.1504170716380.20800@gentwo.org>
	<55310033.1060108@nod.at>
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Sender: owner-linux-mm@kvack.org
List-ID: <linux-mm.kvack.org>
To: richard@nod.at
Cc: cl@linux.com, linux-arch@vger.kernel.org, arnd@arndb.de, corbet@lwn.net, penberg@kernel.org, rientjes@google.com, iamjoonsoo.kim@lge.com, akpm@linux-foundation.org, linux-kernel@vger.kernel.org, linux-doc@vger.kernel.org, netdev@vger.kernel.org, linux-mm@kvack.org, jdike@addtoit.com, rusty@rustcorp.com.au, upa@haeena.net, christoph.paasch@gmail.com, mathieu.lacage@gmail.com, libos-nuse@googlegroups.com


Hi Christoph, Richard,

At Fri, 17 Apr 2015 14:44:35 +0200,
Richard Weinberger wrote:
> 
> Am 17.04.2015 um 14:17 schrieb Christoph Lameter:
> > On Fri, 17 Apr 2015, Hajime Tazaki wrote:
> > 
> >> add header includion for CONFIG_LIB to wrap kmalloc and co. This will
> >> bring malloc(3) based allocator used by arch/lib.
> > 
> > Maybe add another allocator insteadl? SLLB which implements memory
> > management using malloc()?
> 
> Yeah, that's a good idea.

first, my bad, I should be more precise on the commit message.

the patch with 04/11 patch is used _not_ only malloc(3) but
also any allocator registered by our entry API, lib_init().

for NUSE case, we use malloc(3) but for DCE (ns-3) case, we
use our own allocator, which manages the (virtual) process
running on network simulator.

if these externally configurable memory allocator are point
of interest in Linux kernel, maybe adding another allocator
into mm/ is interesting but I'm not sure. what do you think ?

btw, what does stand for SLLB ? (just curious)

> Hajime, another question, do you really want a malloc/free backend?
> I'm not a mm expert, but does malloc() behave exactly as the kernel
> counter parts?

as stated above, A1) yes, we need our own allocator, and A2)
yes as NUSE proofed, it behaves fine.

> In UML we allocate a big file on the host side, mmap() it and give this mapping
> to the kernel as physical memory such that any kernel allocator can work with it.

libos doesn't virtualize a physical memory but provide
allocator functions returning memory block on a request
instead.

-- Hajime

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>
