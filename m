Message-Id: <200603150708.k2F78wg12642@unix-os.sc.intel.com>
From: "Chen, Kenneth W" <kenneth.w.chen@intel.com>
Subject: RE: BUG in x86_64 hugepage support
Date: Tue, 14 Mar 2006 23:08:57 -0800
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
In-Reply-To: <20060315043544.GD5526@us.ibm.com>
Sender: owner-linux-mm@kvack.org
Return-Path: <owner-linux-mm@kvack.org>
To: 'Nishanth Aravamudan' <nacc@us.ibm.com>
Cc: agl@us.ibm.com, david@gibson.dropbear.id.au, ak@suse.de, linux-mm@kvack.org, discuss@x86-64.org
List-ID: <linux-mm.kvack.org>

Nishanth Aravamudan wrote on Tuesday, March 14, 2006 8:36 PM
> > I think _PAGE_PSE bit should be in _PAGE_CHG_MASK.
> 
> I can try a kernel with just the _PAGE_PSE bit added to _PAGE_CHG_MASK
> and see if that helps. I think it will still BUG() in my case, however,
> as __LARGE_PTE is 10000001, so only setting the 8th bit will be
> insufficient. So maybe there is also something wrong with what is being
> generated by pgprot_val(newprot)? I will try adding some more debugging
> output to see what is happening in pte_modify.

Forget about preserving _PAGE_PSE BIT, It won't work. I just realized that
_PAGE_PROTNONE clashes with _PAGE_PSE (both use bit 7). Still thinking ...

- Ken

--
To unsubscribe, send a message with 'unsubscribe linux-mm' in
the body to majordomo@kvack.org.  For more info on Linux MM,
see: http://www.linux-mm.org/ .
Don't email: <a href=mailto:"dont@kvack.org"> email@kvack.org </a>
